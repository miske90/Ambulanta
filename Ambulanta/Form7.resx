<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        aalUsorE0qVKpKP/2Q==
</value>
  </data>
</root>